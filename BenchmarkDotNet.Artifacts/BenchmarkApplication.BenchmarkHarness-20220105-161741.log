// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\Yen\source\repos\BenchmarkApplication\bin\Release\net5.0\6d4e2176-b25f-46ba-a69d-9b2b3c7c0db8
// command took 2.13s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\Yen\source\repos\BenchmarkApplication\bin\Release\net5.0\6d4e2176-b25f-46ba-a69d-9b2b3c7c0db8
// command took 3.39s and exited with 0
// ***** Done, took 00:00:05 (5.67 sec)   *****
// Found 2 benchmarks:
//   BenchmarkHarness.RestGetSmallPayloadAsync: DefaultJob [IterationCount=100]
//   BenchmarkHarness.RestGetSmallPayloadAsync: DefaultJob [IterationCount=200]

// **************************
// Benchmark: BenchmarkHarness.RestGetSmallPayloadAsync: DefaultJob [IterationCount=100]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "6d4e2176-b25f-46ba-a69d-9b2b3c7c0db8.dll" --benchmarkName "BenchmarkApplication.BenchmarkHarness.RestGetSmallPayloadAsync(IterationCount: 100)" --job "Default" --benchmarkId 0 in C:\Users\Yen\source\repos\BenchmarkApplication\bin\Release\net5.0\6d4e2176-b25f-46ba-a69d-9b2b3c7c0db8\bin\Release\net5.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 5.0.11 (5.0.1121.47308), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 316200.00 ns, 316.2000 us/op
First Benchmark run
WorkloadJitting  1: 1 op, 14227825800.00 ns, 14.2278 s/op

First Benchmark run
WorkloadWarmup   1: 1 op, 11311663600.00 ns, 11.3117 s/op
First Benchmark run
WorkloadWarmup   2: 1 op, 11136263400.00 ns, 11.1363 s/op
First Benchmark run
WorkloadWarmup   3: 1 op, 11754874700.00 ns, 11.7549 s/op
First Benchmark run
WorkloadWarmup   4: 1 op, 11529078500.00 ns, 11.5291 s/op
First Benchmark run
WorkloadWarmup   5: 1 op, 11545536900.00 ns, 11.5455 s/op
First Benchmark run
WorkloadWarmup   6: 1 op, 12778382700.00 ns, 12.7784 s/op
First Benchmark run
WorkloadWarmup   7: 1 op, 11267193200.00 ns, 11.2672 s/op

// BeforeActualRun
First Benchmark run
WorkloadActual   1: 1 op, 12037496500.00 ns, 12.0375 s/op
First Benchmark run
WorkloadActual   2: 1 op, 11686628100.00 ns, 11.6866 s/op
First Benchmark run
WorkloadActual   3: 1 op, 11818419700.00 ns, 11.8184 s/op
First Benchmark run
WorkloadActual   4: 1 op, 14176010000.00 ns, 14.1760 s/op
First Benchmark run
WorkloadActual   5: 1 op, 11965543600.00 ns, 11.9655 s/op
First Benchmark run
WorkloadActual   6: 1 op, 11855222200.00 ns, 11.8552 s/op
First Benchmark run
WorkloadActual   7: 1 op, 11944281600.00 ns, 11.9443 s/op
First Benchmark run
WorkloadActual   8: 1 op, 11841067700.00 ns, 11.8411 s/op
First Benchmark run
WorkloadActual   9: 1 op, 12865415600.00 ns, 12.8654 s/op
First Benchmark run
WorkloadActual  10: 1 op, 11835950100.00 ns, 11.8360 s/op
First Benchmark run
WorkloadActual  11: 1 op, 11671753100.00 ns, 11.6718 s/op
First Benchmark run
WorkloadActual  12: 1 op, 11769601800.00 ns, 11.7696 s/op
First Benchmark run
WorkloadActual  13: 1 op, 11552913200.00 ns, 11.5529 s/op
First Benchmark run
WorkloadActual  14: 1 op, 12431496700.00 ns, 12.4315 s/op
First Benchmark run
WorkloadActual  15: 1 op, 11551075100.00 ns, 11.5511 s/op
First Benchmark run
WorkloadActual  16: 1 op, 11348436400.00 ns, 11.3484 s/op
First Benchmark run
WorkloadActual  17: 1 op, 11442169000.00 ns, 11.4422 s/op
First Benchmark run
WorkloadActual  18: 1 op, 11237752300.00 ns, 11.2378 s/op
First Benchmark run
WorkloadActual  19: 1 op, 13126207000.00 ns, 13.1262 s/op
First Benchmark run
WorkloadActual  20: 1 op, 11754277400.00 ns, 11.7543 s/op
First Benchmark run
WorkloadActual  21: 1 op, 11743198300.00 ns, 11.7432 s/op
First Benchmark run
WorkloadActual  22: 1 op, 12136933400.00 ns, 12.1369 s/op
First Benchmark run
WorkloadActual  23: 1 op, 11872729600.00 ns, 11.8727 s/op
First Benchmark run
WorkloadActual  24: 1 op, 14837962400.00 ns, 14.8380 s/op
First Benchmark run
WorkloadActual  25: 1 op, 11491109200.00 ns, 11.4911 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 12037496500.00 ns, 12.0375 s/op
WorkloadResult   2: 1 op, 11686628100.00 ns, 11.6866 s/op
WorkloadResult   3: 1 op, 11818419700.00 ns, 11.8184 s/op
WorkloadResult   4: 1 op, 11965543600.00 ns, 11.9655 s/op
WorkloadResult   5: 1 op, 11855222200.00 ns, 11.8552 s/op
WorkloadResult   6: 1 op, 11944281600.00 ns, 11.9443 s/op
WorkloadResult   7: 1 op, 11841067700.00 ns, 11.8411 s/op
WorkloadResult   8: 1 op, 11835950100.00 ns, 11.8360 s/op
WorkloadResult   9: 1 op, 11671753100.00 ns, 11.6718 s/op
WorkloadResult  10: 1 op, 11769601800.00 ns, 11.7696 s/op
WorkloadResult  11: 1 op, 11552913200.00 ns, 11.5529 s/op
WorkloadResult  12: 1 op, 12431496700.00 ns, 12.4315 s/op
WorkloadResult  13: 1 op, 11551075100.00 ns, 11.5511 s/op
WorkloadResult  14: 1 op, 11348436400.00 ns, 11.3484 s/op
WorkloadResult  15: 1 op, 11442169000.00 ns, 11.4422 s/op
WorkloadResult  16: 1 op, 11237752300.00 ns, 11.2378 s/op
WorkloadResult  17: 1 op, 11754277400.00 ns, 11.7543 s/op
WorkloadResult  18: 1 op, 11743198300.00 ns, 11.7432 s/op
WorkloadResult  19: 1 op, 12136933400.00 ns, 12.1369 s/op
WorkloadResult  20: 1 op, 11872729600.00 ns, 11.8727 s/op
WorkloadResult  21: 1 op, 11491109200.00 ns, 11.4911 s/op

// AfterAll
// Benchmark Process 46716 has exited with code 0.

Mean = 11.761 s, StdErr = 0.060 s (0.51%), N = 21, StdDev = 0.274 s
Min = 11.238 s, Q1 = 11.553 s, Median = 11.770 s, Q3 = 11.873 s, Max = 12.431 s
IQR = 0.320 s, LowerFence = 11.073 s, UpperFence = 12.352 s
ConfidenceInterval = [11.531 s; 11.991 s] (CI 99.9%), Margin = 0.230 s (1.96% of Mean)
Skewness = 0.25, Kurtosis = 3, MValue = 2

// **************************
// Benchmark: BenchmarkHarness.RestGetSmallPayloadAsync: DefaultJob [IterationCount=200]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "6d4e2176-b25f-46ba-a69d-9b2b3c7c0db8.dll" --benchmarkName "BenchmarkApplication.BenchmarkHarness.RestGetSmallPayloadAsync(IterationCount: 200)" --job "Default" --benchmarkId 1 in C:\Users\Yen\source\repos\BenchmarkApplication\bin\Release\net5.0\6d4e2176-b25f-46ba-a69d-9b2b3c7c0db8\bin\Release\net5.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 5.0.11 (5.0.1121.47308), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 334200.00 ns, 334.2000 us/op
First Benchmark run
WorkloadJitting  1: 1 op, 23243690000.00 ns, 23.2437 s/op

First Benchmark run
WorkloadWarmup   1: 1 op, 25174252300.00 ns, 25.1743 s/op
First Benchmark run
WorkloadWarmup   2: 1 op, 23206927600.00 ns, 23.2069 s/op
First Benchmark run
WorkloadWarmup   3: 1 op, 23033695500.00 ns, 23.0337 s/op
First Benchmark run
WorkloadWarmup   4: 1 op, 24089083300.00 ns, 24.0891 s/op
First Benchmark run
WorkloadWarmup   5: 1 op, 22944321400.00 ns, 22.9443 s/op
First Benchmark run
WorkloadWarmup   6: 1 op, 24237374400.00 ns, 24.2374 s/op
First Benchmark run
WorkloadWarmup   7: 1 op, 22706983400.00 ns, 22.7070 s/op

// BeforeActualRun
First Benchmark run
WorkloadActual   1: 1 op, 22525042300.00 ns, 22.5250 s/op
First Benchmark run
WorkloadActual   2: 1 op, 23732109200.00 ns, 23.7321 s/op
First Benchmark run
WorkloadActual   3: 1 op, 22670405500.00 ns, 22.6704 s/op
First Benchmark run
WorkloadActual   4: 1 op, 22364160500.00 ns, 22.3642 s/op
First Benchmark run
WorkloadActual   5: 1 op, 27465804500.00 ns, 27.4658 s/op
First Benchmark run
WorkloadActual   6: 1 op, 23091077500.00 ns, 23.0911 s/op
First Benchmark run
WorkloadActual   7: 1 op, 25550392400.00 ns, 25.5504 s/op
First Benchmark run
WorkloadActual   8: 1 op, 22882734400.00 ns, 22.8827 s/op
First Benchmark run
WorkloadActual   9: 1 op, 23112217600.00 ns, 23.1122 s/op
First Benchmark run

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: The response ended prematurely.
   at System.Net.Http.HttpConnection.FillAsync(Boolean async)
   at System.Net.Http.HttpConnection.ReadNextResponseHeaderLineAsync(Boolean async, Boolean foldedHeadersAllowed)
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.SendAsyncCore(HttpRequestMessage request, HttpCompletionOption completionOption, Boolean async, Boolean emitTelemetryStartStop, CancellationToken cancellationToken)
   at BenchmarkApplication.Client.GetSmallPayloadAsync() in C:\Users\Yen\source\repos\BenchmarkApplication\Client.cs:line 27
   at BenchmarkApplication.BenchmarkHarness.RestGetSmallPayloadAsync() in C:\Users\Yen\source\repos\BenchmarkApplication\BenchmarkHarness.cs:line 22
   at BenchmarkDotNet.Autogenerated.Runnable_1.<.ctor>b__3_4() in C:\Users\Yen\source\repos\BenchmarkApplication\bin\Release\net5.0\6d4e2176-b25f-46ba-a69d-9b2b3c7c0db8\6d4e2176-b25f-46ba-a69d-9b2b3c7c0db8.notcs:line 921
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionNoUnroll(Int64 invokeCount) in C:\Users\Yen\source\repos\BenchmarkApplication\bin\Release\net5.0\6d4e2176-b25f-46ba-a69d-9b2b3c7c0db8\6d4e2176-b25f-46ba-a69d-9b2b3c7c0db8.notcs:line 1574
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.RunAuto(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.Run(Int64 invokeCount, IterationMode iterationMode, Boolean runAuto, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.EngineActualStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in C:\Users\Yen\source\repos\BenchmarkApplication\bin\Release\net5.0\6d4e2176-b25f-46ba-a69d-9b2b3c7c0db8\6d4e2176-b25f-46ba-a69d-9b2b3c7c0db8.notcs:line 902
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\Users\Yen\source\repos\BenchmarkApplication\bin\Release\net5.0\6d4e2176-b25f-46ba-a69d-9b2b3c7c0db8\6d4e2176-b25f-46ba-a69d-9b2b3c7c0db8.notcs:line 52
// AfterAll
// Benchmark Process 39504 has exited with code -1.


// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\BenchmarkApplication.BenchmarkHarness-report.csv
  BenchmarkDotNet.Artifacts\results\BenchmarkApplication.BenchmarkHarness-report-github.md
  BenchmarkDotNet.Artifacts\results\BenchmarkApplication.BenchmarkHarness-report.html

// * Detailed results *
BenchmarkHarness.RestGetSmallPayloadAsync: DefaultJob [IterationCount=100]
Runtime = .NET 5.0.11 (5.0.1121.47308), X64 RyuJIT; GC = Concurrent Workstation
Mean = 11.761 s, StdErr = 0.060 s (0.51%), N = 21, StdDev = 0.274 s
Min = 11.238 s, Q1 = 11.553 s, Median = 11.770 s, Q3 = 11.873 s, Max = 12.431 s
IQR = 0.320 s, LowerFence = 11.073 s, UpperFence = 12.352 s
ConfidenceInterval = [11.531 s; 11.991 s] (CI 99.9%), Margin = 0.230 s (1.96% of Mean)
Skewness = 0.25, Kurtosis = 3, MValue = 2
-------------------- Histogram --------------------
[11.108 s ; 11.581 s) | @@@@@@
[11.581 s ; 11.902 s) | @@@@@@@@@@
[11.902 s ; 12.171 s) | @@@@
[12.171 s ; 12.562 s) | @
---------------------------------------------------

BenchmarkHarness.RestGetSmallPayloadAsync: DefaultJob [IterationCount=200]
Runtime = .NET 5.0.11 (5.0.1121.47308), X64 RyuJIT; GC = Concurrent Workstation
There are not any results runs

// * Summary *

BenchmarkDotNet=v0.13.1, OS=Windows 10.0.19042.1415 (20H2/October2020Update)
Intel Core i7-8650U CPU 1.90GHz (Kaby Lake R), 1 CPU, 8 logical and 4 physical cores
.NET SDK=5.0.402
  [Host]     : .NET 5.0.11 (5.0.1121.47308), X64 RyuJIT
  DefaultJob : .NET 5.0.11 (5.0.1121.47308), X64 RyuJIT


|                   Method | IterationCount |    Mean |   Error |  StdDev |
|------------------------- |--------------- |--------:|--------:|--------:|
| RestGetSmallPayloadAsync |            100 | 11.76 s | 0.230 s | 0.274 s |
| RestGetSmallPayloadAsync |            200 |      NA |      NA |      NA |

Benchmarks with issues:
  BenchmarkHarness.RestGetSmallPayloadAsync: DefaultJob [IterationCount=200]

// * Hints *
Outliers
  BenchmarkHarness.RestGetSmallPayloadAsync: Default -> 4 outliers were removed (12.87 s..14.84 s)
  BenchmarkHarness.RestGetSmallPayloadAsync: Default -> Something went wrong with outliers: Size(WorkloadActual) = 9, Size(WorkloadActual/Outliers) = 2, Size(Result) = 0), OutlierMode = RemoveUpper

// * Legends *
  IterationCount : Value of the 'IterationCount' parameter
  Mean           : Arithmetic mean of all measurements
  Error          : Half of 99.9% confidence interval
  StdDev         : Standard deviation of all measurements
  1 s            : 1 Second (1 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:14:32 (872.95 sec), executed benchmarks: 2

Global total time: 00:14:38 (878.63 sec), executed benchmarks: 2
// * Artifacts cleanup *
